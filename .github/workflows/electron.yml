name: Build and release electron

on:
  release:
    types: [published]

jobs:
  get-release:
    name: Get latest release
    runs-on: ubuntu-latest

    outputs:
      version: ${{ steps.package_version.outputs.version }}
      upload_url: ${{ steps.get_release.outputs.upload_url }}

    steps:
      - name: Check out Git repository
        uses: actions/checkout@main

      - name: Version
        id: package_version
        run: |
          VERSION=`cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]'`
          echo "::set-output name=version::$VERSION"

      - name: Get release
        id: get_release
        run: |
          UPLOAD_URL=$(curl -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" https://api.github.com/repos/Airthium/tanatloc-electron/releases/latest | jq -r '.upload_url')
          echo $UPLOAD_URL
          echo "::set-output name=upload_url::$UPLOAD_URL"

  release-ubuntu:
    needs: get-release
    name: Build and release (Ubuntu)
    runs-on: ubuntu-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@main
        with:
          token: ${{ secrets.TANATLOC_SSR_AS_SUBMODULE }}
          submodules: recursive

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@main
        with:
          node-version: 16

      - name: Install
        run: yarn install

      - name: Electron build
        run: yarn build

      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get-release.outputs.upload_url }}
          asset_path: ./dist/Tanatloc-${{ needs.get-release.outputs.version }}.AppImage
          asset_name: Tanatloc-${{ needs.get-release.outputs.version }}.AppImage
          asset_content_type: application/octet-stream

  release-macos:
    needs: get-release
    name: Build and release (MacOS)
    runs-on: macos-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@main
        with:
          token: ${{ secrets.TANATLOC_SSR_AS_SUBMODULE }}
          submodules: recursive

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@main
        with:
          node-version: 16

      - name: Install
        run: yarn install

      - name: Electron build
        run: yarn build

      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get-release.outputs.upload_url }}
          asset_path: ./dist/Tanatloc-${{ needs.get-release.outputs.version }}.dmg
          asset_name: Tanatloc-${{ needs.get-release.outputs.version }}.dmg
          asset_content_type: application/octet-stream

  release-windows:
    needs: get-release
    name: Build and release (Windows)
    runs-on: windows-latest

    steps:
      - name: Check out Git repository
        uses: actions/checkout@main
        with:
          token: ${{ secrets.TANATLOC_SSR_AS_SUBMODULE }}
          submodules: recursive

      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@main
        with:
          node-version: 16

      - name: Install
        run: yarn install

      - name: Electron build
        run: yarn build

      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.get-release.outputs.upload_url }}
          asset_path: "./dist/Tanatloc\ Setup\ ${{ needs.get-release.outputs.version }}.exe"
          asset_name: "Tanatloc\ Setup\ ${{ needs.get-release.outputs.version }}.exe"
          asset_content_type: application/octet-stream
